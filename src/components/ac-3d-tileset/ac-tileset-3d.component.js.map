{"version":3,"sources":["ac-tileset-3d.component.ts"],"names":[],"mappings":"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","file":"ac-tileset-3d.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { Checker } from '../../utils/checker';\r\n\r\n/**\r\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\r\n *  options according to `Cesium3DTileset` definition.\r\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\r\n *    </ac-3d-tile-layer>\r\n *  ```\r\n */\r\n\r\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\r\n   * @type {{Object}}\r\n   */\r\n  \r\n  options: { url?: string } = {};\r\n\r\n  /**\r\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\r\n   * @type {Number}\r\n   */\r\n  \r\n  index: Number;\r\n\r\n  /**\r\n   * show (optional) - Determines if the map layer is shown.\r\n   * @type {Boolean}\r\n   */\r\n  \r\n  show = true;\r\n\r\n  private _layerInstance: any = null;\r\n  private _3dtilesCollection: any;\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Checker.present(this.options.url)) {\r\n      throw new Error('Options must have a url');\r\n    }\r\n\r\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\r\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\r\n\r\n    if (this.show) {\r\n      this._layerInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['show'] && !changes['show'].isFirstChange()) {\r\n      const showValue = changes['show'].currentValue;\r\n\r\n      if (showValue) {\r\n        if (this._layerInstance) {\r\n          this._3dtilesCollection.add(this._layerInstance, this.index);\r\n        } else {\r\n          this._layerInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\r\n        }\r\n      }\r\n      else if (this._layerInstance) {\r\n        this._3dtilesCollection.remove(this._layerInstance, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._layerInstance) {\r\n      this._3dtilesCollection.remove(this._layerInstance, false);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector : 'ac-3d-tile-layer',\r\n  template : '',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'index': [{ type: Input },],\n'show': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}