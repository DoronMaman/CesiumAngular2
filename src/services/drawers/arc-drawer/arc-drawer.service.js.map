{"version":3,"sources":["arc-drawer.service.ts"],"names":[],"mappings":"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","file":"arc-drawer.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { StaticPrimitiveDrawer } from '../static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\r\n\r\n/**\r\n +  This drawer is responsible for drawing an arc over the Cesium map.\r\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\r\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\r\n */\r\n\r\n\r\nexport class ArcDrawerService extends StaticPrimitiveDrawer {\r\n\tconstructor(cesiumService: CesiumService) {\r\n\t\tsuper(Cesium.PolylineGeometry, cesiumService);\r\n\t}\r\n\r\n\tadd(geometryProps: any, instanceProps: any, primitiveProps: any) {\r\n\t\tgeometryProps.positions = this.generatePositions(geometryProps);\r\n\r\n\t\treturn super.add(geometryProps, instanceProps, primitiveProps);\r\n\t}\r\n\r\n\tprivate generatePositions(cesiumProps: any): Array<any> {\r\n\t\tconst arcPositions = [];\r\n\t\tconst defaultGranularity = 0.004;\r\n\t\tconst numOfSamples = 1 / (cesiumProps.granularity || defaultGranularity);\r\n\r\n\t\tfor (let i = 0; i < numOfSamples + 1; i++) {\r\n\t\t\tconst currentAngle = cesiumProps.angle + cesiumProps.delta * i / numOfSamples;\r\n\t\t\tconst distance = cesiumProps.radius / Cesium.Ellipsoid.WGS84.maximumRadius;\r\n\t\t\tconst curLat = Cesium.Cartographic.fromCartesian(cesiumProps.center).latitude;\r\n\t\t\tconst curLon = Cesium.Cartographic.fromCartesian(cesiumProps.center).longitude;\r\n\r\n\t\t\tconst destinationLat = Math.asin(\r\n\t\t\t\tMath.sin(curLat) * Math.cos(distance) +\r\n\t\t\t\tMath.cos(curLat) * Math.sin(distance) * Math.cos(currentAngle)\r\n\t\t\t);\r\n\r\n\t\t\tlet destinationLon = curLon + Math.atan2(Math.sin(currentAngle) * Math.sin(distance) * Math.cos(curLat),\r\n\t\t\t\t\tMath.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat)\r\n\t\t\t\t);\r\n\r\n\t\t\tdestinationLon = (destinationLon + 3 * Math.PI) % (2 * Math.PI) - Math.PI;\r\n\r\n\t\t\tarcPositions.push(Cesium.Cartesian3.fromRadians(destinationLon, destinationLat));\r\n\t\t}\r\n\r\n\t\treturn arcPositions;\r\n\t}\r\n\r\n\tupdate(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\r\n\t\tif (instanceProps && instanceProps.attributes && instanceProps.attributes.color) {\r\n\t\t\tconst color = instanceProps.attributes.color.value;\r\n\r\n\t\t\tif (primitive.ready) {\r\n\t\t\t\tprimitive.getGeometryInstanceAttributes().color = color;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tCesium.when(primitive.readyPromise).then((readyPrimitive) => {\r\n\t\t\t\t\treadyPrimitive.getGeometryInstanceAttributes().color.value = color;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (primitiveProps.appearance) {\r\n\t\t\tprimitive.appearance = primitiveProps.appearance;\r\n\t\t}\r\n\r\n\t\treturn primitive;\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}