{"version":3,"sources":["entities-drawer.service.ts"],"names":[],"mappings":"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","file":"entities-drawer.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from './enums/graphics-type.enum';\r\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\r\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\r\n\r\n/**\r\n *  General primitives drawer responsible of drawing Cesium primitives.\r\n *  Drawers the handle Cesium primitives extend it.\r\n */\r\n\r\n\r\nexport class EntitiesDrawerService extends BasicDrawerService {\r\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\r\n  private graphicsTypeName: string;\r\n\r\n  constructor(private cesiumService: CesiumService,\r\n              private graphicsType: GraphicsType,\r\n              private defaultOptions: EntitiesDrawerOptions = {\r\n                collectionMaxSize: -1,\r\n                collectionSuspensionTime: -1,\r\n                collectionsNumber: 1\r\n              }) {\r\n    super();\r\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\r\n  }\r\n\r\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\r\n    let freeEntityCollection = null;\r\n    this.entityCollections.forEach((entityCollection) => {\r\n      if (entityCollection.isFree()) {\r\n        freeEntityCollection = entityCollection;\r\n      }\r\n    });\r\n\r\n    return freeEntityCollection;\r\n  }\r\n\r\n  init(options?: EntitiesDrawerOptions) {\r\n    const finalOptions = options || this.defaultOptions;\r\n    const dataSources = [];\r\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\r\n      const dataSource = new Cesium.CustomDataSource();\r\n\t\t\tdataSources.push(dataSource);\r\n      this.entityCollections.set(dataSource.entities,\r\n        new OptimizedEntityCollection(\r\n          dataSource.entities,\r\n          finalOptions.collectionMaxSize,\r\n          finalOptions.collectionSuspensionTime));\r\n    }\r\n    \r\n\t\treturn dataSources;\r\n  }\r\n\r\n  add(cesiumProps: any) {\r\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\r\n    if (optimizedEntityCollection === null) {\r\n      throw new Error('No more free entity collections');\r\n    }\r\n\r\n    const graphicsClass = this.graphicsType as any;\r\n    const entityObject = {\r\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\r\n      show: cesiumProps.show !== undefined ? cesiumProps.show : true,\r\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\r\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\r\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\r\n      [this.graphicsTypeName]: new graphicsClass(cesiumProps)\r\n    };\r\n\r\n    if (cesiumProps.name !== undefined) {\r\n      entityObject.name = cesiumProps.name;\r\n    }\r\n\r\n    return optimizedEntityCollection.add(entityObject);\r\n  }\r\n\r\n  update(entity: any, cesiumProps: any) {\r\n    this.suspendEntityCollection(entity);\r\n\r\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\r\n    entity.show = cesiumProps.show !== undefined ? cesiumProps.show : entity.show;\r\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\r\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\r\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\r\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\r\n\r\n    if (this._propsAssigner) {\r\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\r\n    }\r\n    else {\r\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\r\n    }\r\n  }\r\n\r\n  remove(entity: any) {\r\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\r\n    optimizedEntityCollection.remove(entity);\r\n  }\r\n\r\n  removeAll() {\r\n    this.entityCollections.forEach((entityCollection) => {\r\n      entityCollection.removeAll();\r\n    });\r\n  }\r\n\r\n  setShow(showValue: boolean) {\r\n    this.entityCollections.forEach((entityCollection) => {\r\n      entityCollection.setShow(showValue);\r\n    });\r\n  }\r\n\r\n  private suspendEntityCollection(entity) {\r\n    const id = entity.entityCollection;\r\n    if (!this.entityCollections.has(id)) {\r\n      throw new Error('No EntityCollection for entity.entityCollection');\r\n    }\r\n\r\n    const entityCollection = this.entityCollections.get(id);\r\n    entityCollection.suspend();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n{type: GraphicsType, },\nnull,\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}