{"version":3,"sources":["viewer-factory.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAIE;QACE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IASD,oCAAY,GAAZ,UAAa,YAAyB,EAAE,OAAa;QAEnD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,iBAAiB,CAAC,GAAG,mCAAmC,CAAC;QAClE,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAC1C;gBAEE,eAAe,EAAG,MAAM,CAAC,mCAAmC,CAAC;oBAC3D,GAAG,EAAG,MAAM,CAAC,cAAc,CAAC,gCAAgC,CAAC;iBAC9D,CAAC;gBACF,eAAe,EAAG,KAAK;gBACvB,QAAQ,EAAG,KAAK;aACjB,CAAC,CAAC;QACP,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;CA5CD,AA4CC,IAAA;SA5CY,aAAa","file":"viewer-factory.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class ViewerFactory {\r\n  cesium: any;\r\n  \r\n\r\n  constructor() {\r\n    this.cesium = Cesium;\r\n  }\r\n  \r\n  /**\r\n   * Creates a viewer with default or custom options\r\n   * @param mapContainer - container to initialize the viewer on\r\n   * @param options - Options to create the viewer with - Optional\r\n   *\r\n   * @returns {any} new viewer\r\n   */\r\n  createViewer(mapContainer: HTMLElement, options?: any ) {\r\n    // For backwards compatibility, TODO: should be removed\r\n    if (!window['CESIUM_BASE_URL']) {\r\n      window['CESIUM_BASE_URL'] = '/node_modules/cesium/Build/Cesium';\r\n    }\r\n    \r\n    let viewer = null;\r\n    if (options) {\r\n      viewer = new this.cesium.Viewer(mapContainer, options);\r\n    } else {\r\n      viewer = new this.cesium.Viewer(mapContainer,\r\n        {\r\n          // Poor internet connection - use default globe image, TODO: should be removed\r\n          imageryProvider : Cesium.createTileMapServiceImageryProvider({\r\n            url : Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\r\n          }),\r\n          baseLayerPicker : false,\r\n          geocoder : false\r\n        });\r\n    }\r\n    \r\n    return viewer;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}